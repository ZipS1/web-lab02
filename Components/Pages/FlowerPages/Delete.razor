@page "/flowers/delete"
@using Microsoft.EntityFrameworkCore
@using lab02.Models
@inject IDbContextFactory<lab02.Database.AppDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Удаление цветка</PageTitle>

<h1>Удаление цветка</h1>

<p>Вы уверены, что хотите удалить?</p>
<div>
    <hr />
    @if (flower is null)
    {
        <p><em>Загрузка...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Имя</dt>
            <dd class="col-sm-10">@flower.Name</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Сорт</dt>
            <dd class="col-sm-10">@flower.Kind</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Ср. высота</dt>
            <dd class="col-sm-10">@flower.AverageHeight</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Тип цветка</dt>
            <dd class="col-sm-10">@flower.LeafType</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Цветет?</dt>
            <dd class="col-sm-10">@flower.CanBloom</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Доп. сведения</dt>
            <dd class="col-sm-10">@flower.Details</dd>
        </dl>
        <EditForm method="post" Model="flower" OnValidSubmit="DeleteFlower" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(flower is null)">Удалить</button> |
            <a href="/flowers">Назад к списку</a>
        </EditForm>
    }
</div>

@code {
    private Flower? flower;

    [SupplyParameterFromQuery]
    private int FlowerId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        flower = await context.Flowers.FirstOrDefaultAsync(m => m.FlowerId == FlowerId);

        if (flower is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteFlower()
    {
        using var context = DbFactory.CreateDbContext();
        context.Flowers.Remove(flower!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/flowers");
    }
}
