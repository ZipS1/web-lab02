@page "/flowers"
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using lab02.Models
@using lab02.Database
@implements IAsyncDisposable
@inject IDbContextFactory<lab02.Database.AppDbContext> DbFactory

<PageTitle>Список цветов</PageTitle>

<h1>Список цветов</h1>

<p>
    <a href="flowers/create">Создать</a>
</p>

<QuickGrid Class="table" Items="context.Flowers">
    <PropertyColumn Title="Имя" Property="flower => flower.Name" />
    <PropertyColumn Title="Сорт" Property="flower => flower.Kind" />
    <PropertyColumn Title="Ср. высота" Property="flower => flower.AverageHeight" />
    <PropertyColumn Title="Тип цветка" Property="flower => flower.LeafType" />
    <PropertyColumn Title="Цветет?" Property="@(flower => flower.CanBloom ? "Да" : "Нет")" />
    <PropertyColumn Title="Доп. сведения" Property="flower => flower.Details" />

    <TemplateColumn Context="flower">
        <a href="@($"supplies?flowerid={flower.FlowerId}")">Поставки</a> |
        <a href="@($"flowers/edit?flowerid={flower.FlowerId}")">Редактировать</a> |
        <a href="@($"flowers/details?flowerid={flower.FlowerId}")">Детали</a> |
        <a href="@($"flowers/delete?flowerid={flower.FlowerId}")">Удалить</a>
    </TemplateColumn>
</QuickGrid>

@code {
    private AppDbContext context = default!;

    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();
    }

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}
