@page "/suppliers"
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using lab02.Models
@using lab02.Database
@implements IAsyncDisposable
@inject IDbContextFactory<lab02.Database.AppDbContext> DbFactory

<PageTitle>Список поставщиков</PageTitle>

<h1>Список поставщиков</h1>

<p>
    <a href="suppliers/create">Создать</a>
</p>

<QuickGrid Class="table" Items="context.Suppliers">
    <PropertyColumn Title="Полное наименование" Property="supplier => supplier.FullName" />
    <PropertyColumn Title="Сокращенное наименование" Property="supplier => supplier.ShortName" />
    <PropertyColumn Title="Юридический адрес" Property="supplier => supplier.LegalAddress" />
    <PropertyColumn Title="Номер телефона" Property="supplier => supplier.PhoneNumber" />
    <PropertyColumn Title="ФИО директора" Property="supplier => supplier.DirectorName" />

    <TemplateColumn Context="supplier">
        <a href="@($"supplies?supplierid={supplier.SupplierId}")">Поставки</a> |
        <a href="@($"suppliers/edit?supplierid={supplier.SupplierId}")">Редактировать</a> |
        <a href="@($"suppliers/details?supplierid={supplier.SupplierId}")">Детали</a> |
        <a href="@($"suppliers/delete?supplierid={supplier.SupplierId}")">Удалить</a>
    </TemplateColumn>
</QuickGrid>

@code {
    private AppDbContext context = default!;

    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();
    }

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}
