@page "/supplies/create"
@using Microsoft.EntityFrameworkCore
@using lab02.Models
@inject IDbContextFactory<lab02.Database.AppDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>Supply</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Supply" OnValidSubmit="AddSupply" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />
            <div class="mb-3">
                <label for="flowerid" class="form-label">FlowerId:</label> 
                <InputNumber id="flowerid" @bind-Value="Supply.FlowerId" class="form-control" /> 
                <ValidationMessage For="() => Supply.FlowerId" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="deliverydate" class="form-label">DeliveryDate:</label> 
                <InputDate id="deliverydate" @bind-Value="Supply.DeliveryDate" class="form-control" /> 
                <ValidationMessage For="() => Supply.DeliveryDate" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="priceperunit" class="form-label">PricePerUnit:</label> 
                <InputNumber id="priceperunit" @bind-Value="Supply.PricePerUnit" class="form-control" /> 
                <ValidationMessage For="() => Supply.PricePerUnit" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="units" class="form-label">Units:</label> 
                <InputNumber id="units" @bind-Value="Supply.Units" class="form-control" /> 
                <ValidationMessage For="() => Supply.Units" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="supplierid" class="form-label">SupplierId:</label> 
                <InputNumber id="supplierid" @bind-Value="Supply.SupplierId" class="form-control" /> 
                <ValidationMessage For="() => Supply.SupplierId" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/supplies">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private Supply Supply { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddSupply()
    {
        using var context = DbFactory.CreateDbContext();
        context.Supplies.Add(Supply);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/supplies");
    }
}
