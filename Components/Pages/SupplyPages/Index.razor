@page "/supplies"
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using lab02.Models
@using lab02.Database
@implements IAsyncDisposable
@inject IDbContextFactory<lab02.Database.AppDbContext> DbFactory

<PageTitle>Список поставок</PageTitle>

<h1>Список поставок</h1>

<p>
    <a href="supplies/create">Создать</a>
</p>

<QuickGrid Class="table" Items="context.Supplies">
    <PropertyColumn Title="Цветок" Property="@(supply => $"{context.Flowers.FirstOrDefault(f => f.FlowerId == supply.FlowerId)!.Name}")" />
    <PropertyColumn Title="Дата поставки" Property="supply => supply.DeliveryDate.ToShortDateString()" />
    <PropertyColumn Title="Цена за единицу" Property="supply => supply.PricePerUnit" />
    <PropertyColumn Title="Количество" Property="supply => supply.Units" />
    <PropertyColumn Title="Поставщик" Property="@(supply => $"{context.Suppliers.FirstOrDefault(f => f.SupplierId == supply.SupplierId)!.FullName}")" />

    <TemplateColumn Context="supply">
        <a href="@($"supplies/edit?supplyid={supply.SupplyId}")">Редактировать</a> |
        <a href="@($"supplies/details?supplyid={supply.SupplyId}")">Детали</a> |
        <a href="@($"supplies/delete?supplyid={supply.SupplyId}")">Удалить</a>
    </TemplateColumn>
</QuickGrid>

@code {
    private AppDbContext context = default!;

    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();
    }

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}
